<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h2>Develop</h2>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>Create GitHub web</h1>
<p>prepare:</p>
<p>python--fall2020_v2</p>
<p>github account</p>
<p>website(firefox,chrome)</p>
<p>USB(least 32GB)</p>
<h2>IPV6 question(NFU BGA0810)</h2>
<p>need to connect Proxy:</p>
<p> &gt;add ".gitconfig" in Y:/home</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">[http]
	proxy = http://[2001:288:6004:17::69]:3128
[user]
    name = useename
    email = XXXXXXXX@gm.nfu.edu.tw</pre>
<h2>step1-download github file(fall2020_v2)(cmd)</h2>
<p>1.(X):</p>
<p>2.cd (folder)</p>
<p>3.git clone <a href="https://github.com/username/cp2020.git">https://github.com/username/cp2020.git</a></p>
<p>4.git submodule add <a href="https://github.com/username/cmsimde.git">https://github.com/username/cmsimde.git</a> cmsimde</p>
<p><br/>step2-clon <up_dir> file (folder)</up_dir></p>
<p>1.open-&gt;(X):/fall2020_v2/tmp/cmsimde/up_dir</p>
<p>2.clone &lt;up_dir&gt; file to &lt;cp2020&gt;</p>
<h2>step2-open&amp;set web(cmd)</h2>
<p>1.(X):</p>
<p>2.cd tmp/cp2020/cmsimde</p>
<p>3.python wsgi.py</p>
<p>4.clon URL&lt;https:/IP/&gt; and use chome to connect (punch generate_pages after finished)<img alt="" height="173" src="/images/Screenshot 2020-11-13 111704.png" width="688"/> </p>
<h2>step3-save file(cmd)</h2>
<p>after step4</p>
<p>1.ctrl+c to off web</p>
<p>2.typ ".." back &lt;cp2020&gt; folder</p>
<p>3.git pull</p>
<p>4.git add .</p>
<p>5.git commit -m"version name"</p>
<p>6.git push</p>
<h1>Homework</h1>
<h2>W8H</h2>
<p><a href="https://gitter.im/mdecourse/Fall2020">https://gitter.im/mdecourse/Fall2020</a> uploaded in Nov12 by KMOL.</p>
<p>Made in <a href="https://app.diagrams.net/">https://app.diagrams.net/</a> </p>
<p><img alt="" height="596" src="/images/kmol_env.png" width="525"/></p>
<p>cp2020(python)</p>
<p><a href="https://www.kaggle.com/mdecourse/cp2020w8/">https://www.kaggle.com/mdecourse/cp2020w8/</a> </p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">"""
semester=1091

courseno=0762

cp

1a 1091/0762

1b 1091/0776

cad

2a 1091/0788

2b 1091/0801
"""
# 導入 urllib.request: https://docs.python.org/3/library/urllib.request.html
# 透過 urllib.request 模組中的 urlopen() 開啟網路 url 連結資料
import urllib.request  # the lib that handles the url stuff
# 定義一個輸入學期與課號,就能夠輸出各課程修課人員數列的函式

def getRegList(semester, courseno):
    # 因為課號可能以 0 開頭, 因此採字串型別輸入, 為了一致, 輸入變數一律採字串輸入
    target_url = "https://nfulist.herokuapp.com/?semester=" + semester + "&amp;courseno=" + courseno
    regList = []
    for line in urllib.request.urlopen(target_url):
        # 由於 urlopen() 取下的網際資料為 binary 格式, 可以透過 decode() 解碼為 ASCII 資料
        regList.append(line.decode('utf-8').rstrip())
    # 此一函式利用 return 將資料傳回
    return regList
    
#print(getRegList("1091", "0776"))


# 1b_from_nfu.txt is one line file
#with open("1b_from_nfu.txt") as f:
'''
with open("/kaggle/input/w8data/1b_oneline.txt") as f:
    # read() will read the whole content of file
    cRead = f.read()
print(cRead)
'''

with open("/kaggle/input/w8data/1a_from_nfu.txt") as f:
    # read() will read the whole content of file
    cRead = f.read()
print(cRead)

'''

with open("/kaggle/input/1b_oneline.txt") as f:
    # readline() only read one line
    cReadline = f.readline()
#print(cReadline)

with open("1b_from_nfu.txt") as f:
    # readlines() will read line by line and put into list
    cReadlines = f.readlines()
#print(cReadlines)

# user split() to cut cRead string into list with " "
cReadSplit = cRead.split(" ")
#print(cReadSplit)

for i in range(len(cReadSplit)):
    print(cReadSplit[i])
'''</pre>
<p></p>